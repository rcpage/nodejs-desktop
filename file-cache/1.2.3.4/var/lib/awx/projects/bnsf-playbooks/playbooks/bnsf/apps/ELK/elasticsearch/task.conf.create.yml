- name: "Assign template parameters"
  set_fact:
   template_src: "{{ templates ~ '/elasticsearch/jvm.options.yml' }}"
   template_dest: "{{ elasticSearch.configDirectory ~ '/' ~ elasticSearch.configFileJvm }}"
 
- name: "Build template: {{ template_dest  }} <= {{template_src}}"
  template:
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

#- name: "Upload configuration file: {{ template_dest }}"
#  include_tasks: ../curl/task.artifactory.push.yml
#  vars:
#    file_name: "{{ template_dest }}"


- name: "Assign template parameters"
  set_fact:
   template_src: "{{ templates ~ '/elasticsearch/' ~ elasticSearch.configLogFile }}"
   template_dest: "{{ elasticSearch.configDirectory ~ '/' ~ elasticSearch.configLogFile }}"
 
- name: "Build template: {{ template_dest  }} <= {{template_src}}"
  template:
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

#- name: "Upload configuration file: {{ template_dest }}"
#  include_tasks: ../curl/task.artifactory.push.yml
#  vars:
#    file_name: "{{ template_dest }}"



- name: "Assign template parameters"
  set_fact:
   template_src: "{{ templates ~ '/elasticsearch/elasticsearch.marvel.yml' }}"
   template_dest: "{{ elasticSearch.configDirectory ~ '/' ~ elasticSearch.configFile }}"
  when: elasticSearchMarvelConfig is defined

- name: "Assign template parameters"
  set_fact:
   template_src: "{{ templates ~ '/elasticsearch/elasticsearch.yml' }}"
   template_dest: "{{ elasticSearch.configDirectory ~ '/' ~ elasticSearch.configFile }}"

- name: "Build template: {{ template_dest  }} <= {{template_src}}"
  template:
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

#- name: "Upload configuration file: {{ template_dest }}"
#  include_tasks: ../curl/task.artifactory.push.yml
#  vars:
#    file_name: "{{ template_dest }}"

- name: "Make directory: {{elasticSearch.xpackConfigDirectory}}"
  file:
    path: "{{elasticSearch.xpackConfigDirectory}}"
    state: directory

- name: "Check if directory exists: {{elasticSearch.credsDirectory}}"
  stat:
   path: "{{elasticSearch.credsDirectory}}"
  register: pathInfo

- name: "Copy keystore to path: {{elasticSearch.xpackConfigDirectory}}"
  copy:
    src: "{{elasticSearch.credsDirectory}}/*.*"
    dest: "{{elasticSearch.xpackConfigDirectory}}"
  when: pathInfo.stat.exists

- name: "chown -r {{elk.userName}}:{{elk.groupName}} {{elasticSearch.configDirectory}}"
  become: yes
  file: 
   path: "{{elasticSearch.configDirectory}}" 
   owner: "{{elk.userName}}" 
   group: "{{elk.groupName}}" 
   mode: 0775 
   state: directory 
   recurse: yes



