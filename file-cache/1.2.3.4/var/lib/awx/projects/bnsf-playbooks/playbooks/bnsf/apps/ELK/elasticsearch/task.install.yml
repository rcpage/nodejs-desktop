- name: "Delete Elastic Search app directories"
  include_tasks: task.dir.delete.yml

- name: "Create Elastic Search app directories"
  include_tasks: task.dir.create.yml

- name: "Install Fedora package: libselinux-python"
  become: yes
  dnf:
   name: libselinux-python
   state: present
  when: ansible_distribution == "Fedora"

- name: "Check if java is installed: /usr/bin/java"
  stat:
   path: "/user/bin/java"
  register: javaPath

- name: "Install RHEL package: java"
  become: yes
  yum:
    name: "java"
    state: present
  when: ansible_distribution == "RedHat" and javaPath.stat.exists == False

- name: "Install Fedora package: java"
  become: yes
  dnf:
    name: "java"
    state: present
  when: ansible_distribution == "Fedora" and javaPath.stat.exists == False

- name: "Download: {{elasticSearch.payloadName}}"
  get_url:
    url: "{{elasticSearch.payloadName}}"
    dest: "./{{elasticSearch.packageName}}"
    mode: 0777

- name: "Extract {{elasticSearch.packageName}} into {{elasticSearch.directory}}"
  shell: "tar -xf ./{{elasticSearch.packageName}} -C {{elasticSearch.directory}} --strip=1"
  #become: yes
  #unarchive:
  #  src: "./{{elasticSearch.packageName}}"
  #  dest: "{{elasticSearch.directory}}"
  #  remote_src: yes
  #  extra_opts:
  #   - "-zxf"

- name: "Setup environment"
  include_tasks: task.conf.create.yml

- file:
   path: /elk/logs/elasticsearch/MWCluster-{{chef_environment}}.log
   state: touch

- name: "Assign template parameters"
  set_fact:
   template_src: "{{ templates ~ '/elasticsearch/elasticsearch.sh' }}"
   template_dest: "{{ elasticSearch.binDirectory ~ '/elasticsearch.sh' }}"

- name: "Build template: {{ template_dest  }} <= {{template_src}}"
  template:
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

- name: "Assign copy parameters"
  set_fact:
   template_src: "{{ files ~ '/certificate/{{chef_environment}}/ElasticKeystore.jks' }}"
   template_dest: /elk/app/elasticsearch/config/x-pack/ElasticKeystore.jks

- name: "Copy file: {{ template_dest  }} <= {{template_src}}"
  copy: 
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

- name: "Assign copy parameters"
  set_fact:
   template_src: "{{ files ~ '/certificate/{{chef_environment}}/bnsfcacert.pem' }}"
   template_dest: /elk/app/elasticsearch/config/x-pack/bnsfcacert.pem

- name: "Copy file: {{ template_dest  }} <= {{template_src}}"
  copy:
    dest: "{{ template_dest }}"
    src:  "{{ template_src  }}"
    owner: "{{ elk.userName }}"
    group: "{{ elk.groupName }}"
    mode: 0770

- name: "Create links to auto start"
  include_tasks: ../shell_autostartkill/task.link.create.yml
  vars:
    file_path: "{{ elasticSearch.binDirectory }}/elasticsearch.sh"
    file_name: "elasticsearch"

- name: "Install: Elastic Search XPack"
  include_tasks: task.xpack.install.yml

- name: "Copy root certificate: {{ files ~ '/certificate/' ~ chef_environment ~  '/bnsfRoot.pem' }}"
  copy:
   src: "{{ files ~ '/certificate/' ~ chef_environment ~  '/bnsfRoot.pem' }}"
   dest: "{{ elasticSearch.rootCertificate }}"
   owner: "{{ elk.userName }}"
   group: "{{ elk.groupName }}"
   mode: 0555

- name: "Service: Stop Elastic Search service"
  include_tasks: task.service.stop.yml

- name: "Service: Force stop Elastic Search service"
  include_tasks: task.service.force_stop.yml

- name: "Security: Apply ELK security policy"
  include_tasks: ../elk/task.security.run.yml
- name: "Security: Apply XPack security policy"
  include_tasks: task.xpack.security.run.yml


